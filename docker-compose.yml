version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: marketplace-db
    environment:
      POSTGRES_DB: marketplace
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/01_init.sql
      - ./generate_big_data.sql:/docker-entrypoint-initdb.d/02_generate_big_data.sql
      - ./business_cases.sql:/sripts/a.sql
    command: ["postgres", "-c", "wal_level=logical", "-c", "max_wal_senders=10", "-c", "max_replication_slots=10"]

  postgres_subscriber:
    image: postgres:15
    container_name: marketplace-subscriber
    depends_on:
      - postgres
    environment:
      POSTGRES_DB: marketplace
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_sub:/var/lib/postgresql/data
      # Схема должна быть идентичной публикации
      - ./init.sql:/docker-entrypoint-initdb.d/00_init_schema.sql
      # Создание подписки после создания схемы
      - ./sub_create_subscription.sql:/docker-entrypoint-initdb.d/10_sub_create_subscription.sql

  backup:
    image: postgres:15
    container_name: marketplace-backup
    depends_on:
      - postgres
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: admin
      PGPASSWORD: 123
      POSTGRES_DB: marketplace
      CRON_MODE: loop
    volumes:
      - ./backup:/opt/backup:ro
      - backups_data:/backups
      - postgres_data:/var/lib/postgresql/data:ro
    entrypoint: ["bash", "/opt/backup/backup.sh"]


volumes:
  postgres_data:
  postgres_data_sub:
  backups_data: